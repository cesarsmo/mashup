{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\cesar.moori\\\\Documents\\\\GitHub\\\\mashup\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//Importação do CSS\nimport './App.css'; // Engine do Qlik\n\nimport engine from './QlikEngine'; // Páginas desenvolvidas\n\nimport Dashboard from './pages/Dashboard';\nimport CaseDetails from './pages/CaseDetails'; //importação dos nossos componentes utilizados\n\nimport Header from './components/Header'; //Importando funções do react\n\nimport { useEffect, useState } from 'react'; //importação do React-Router-Dom, utilizado para fazer a navegação\n\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n  _s();\n\n  const {\n    0: app,\n    1: setApp\n  } = useState(); //Tudo que estiver dentro desse useEffect irá rodar assim que o componente for montado\n\n  useEffect(() => {\n    //Config para passar como parâmetro para a conexão inicial com o qlik e também para abrir o QVF\n    let config = {\n      host: 'grupoitg-nordica.us.qlikcloud.com',\n      prefix: '/',\n      port: 443,\n      isSecure: true,\n      webIntegrationId: 'zQLeIH8-uf87QC9JyLRsdrdZpvhVlkli'\n    }; // let config = {\n    //     host: 'qspoc.nordica.net.br',\n    //      prefix: '/',\n    //      port: 443,\n    //      isSecure: true\n    // }        \n    //Função para usar caso for conectar no Qlik Enterprise\n    // engine.connectQSE(config).then(qlik =>{\n    //QSE\n    // let tempApp = qlik.openApp('4aef20d3-a3a7-4e93-9e65-70f11b624521', config) \n    //Conexão com o qlik cloud\n\n    engine.connectQCS(config).then(qlik => {\n      //Recebida a conexão com qlik, é aberto o qvf (app) logo após com o qlik.openApp\n      //QSC\n      let tempApp = qlik.openApp('999759c8-696c-4009-9546-0e658a9c6fdc', config); //Salvando nosso app no state para passar pros demais componentes por props com app={app}\n\n      setApp(tempApp);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        app: app\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(Dashboard, {\n            app: app\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/case_details\",\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(CaseDetails, {\n            app: app\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"P9X+3BfAEOpifuzHf206XUArfPk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/cesar.moori/Documents/GitHub/mashup/src/App.js"],"names":["engine","Dashboard","CaseDetails","Header","useEffect","useState","HashRouter","Switch","Route","Redirect","App","app","setApp","config","host","prefix","port","isSecure","webIntegrationId","connectQCS","then","qlik","tempApp","openApp"],"mappings":";;;;;AAAA;AACA,OAAO,WAAP,C,CAEA;;AACA,OAAOA,MAAP,MAAmB,cAAnB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,QAApC,QAAoD,kBAApD;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBP,QAAQ,EAA9B,CADW,CAGX;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIS,MAAM,GAAG;AACTC,MAAAA,IAAI,EAAE,mCADG;AAETC,MAAAA,MAAM,EAAE,GAFC;AAGTC,MAAAA,IAAI,EAAE,GAHG;AAITC,MAAAA,QAAQ,EAAE,IAJD;AAKTC,MAAAA,gBAAgB,EAAE;AALT,KAAb,CAFY,CAUZ;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACAlB,IAAAA,MAAM,CAACmB,UAAP,CAAkBN,MAAlB,EAA0BO,IAA1B,CAA+BC,IAAI,IAAG;AAClC;AACA;AACA,UAAIC,OAAO,GAAGD,IAAI,CAACE,OAAL,CAAa,sCAAb,EAAqDV,MAArD,CAAd,CAHkC,CAKlC;;AACAD,MAAAA,MAAM,CAACU,OAAD,CAAN;AACH,KAPD;AAQH,GA/BQ,EA+BN,EA/BM,CAAT;AAkCA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEI,QAAC,UAAD;AAAA,8BAEI,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEX;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,KAAK,MAA9B;AAA+B,UAAA,MAAM,EAAE,mBAAO,QAAC,SAAD;AAAW,YAAA,GAAG,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,KAAK,MAAjC;AAAkC,UAAA,MAAM,EAAE,mBAAO,QAAC,WAAD;AAAa,YAAA,GAAG,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA1DQD,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["//Importação do CSS\nimport './App.css';\n\n// Engine do Qlik\nimport engine from './QlikEngine'\n\n// Páginas desenvolvidas\nimport Dashboard from './pages/Dashboard';\nimport CaseDetails from './pages/CaseDetails';\n\n//importação dos nossos componentes utilizados\nimport Header from './components/Header';\n\n//Importando funções do react\nimport {useEffect, useState} from 'react';\n\n//importação do React-Router-Dom, utilizado para fazer a navegação\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n    const [app, setApp] = useState();\n\n    //Tudo que estiver dentro desse useEffect irá rodar assim que o componente for montado\n    useEffect(() => {\n        //Config para passar como parâmetro para a conexão inicial com o qlik e também para abrir o QVF\n        let config = {\n            host: 'grupoitg-nordica.us.qlikcloud.com',\n            prefix: '/',\n            port: 443,\n            isSecure: true,\n            webIntegrationId: 'zQLeIH8-uf87QC9JyLRsdrdZpvhVlkli'\n        }\n\n        // let config = {\n        //     host: 'qspoc.nordica.net.br',\n        //      prefix: '/',\n        //      port: 443,\n        //      isSecure: true\n        // }        \n\n        //Função para usar caso for conectar no Qlik Enterprise\n        // engine.connectQSE(config).then(qlik =>{\n        //QSE\n        // let tempApp = qlik.openApp('4aef20d3-a3a7-4e93-9e65-70f11b624521', config) \n\n        //Conexão com o qlik cloud\n        engine.connectQCS(config).then(qlik =>{\n            //Recebida a conexão com qlik, é aberto o qvf (app) logo após com o qlik.openApp\n            //QSC\n            let tempApp = qlik.openApp('999759c8-696c-4009-9546-0e658a9c6fdc', config)\n\n            //Salvando nosso app no state para passar pros demais componentes por props com app={app}\n            setApp(tempApp);\n        })\n    }, [])\n\n\n    return (\n        <div className=\"App\">\n            {/* HashRouter coloca todos os componentes dentro do âmbito do router, permitindo ter acesso a página atual */}\n            <HashRouter>\n                {/* Header fica fora do switch pois sempre é renderizado independente da url */}\n                <Header app={app}>\n                </Header>\n\n                {/* Switch faz a checagem da url atual e renderiza a página correspondente */}\n                <Switch>\n                    <Route path=\"/dashboard\" exact render={() => (<Dashboard app={app}></Dashboard>)} />\n                    <Route path=\"/case_details\" exact render={() => (<CaseDetails app={app}></CaseDetails>)} />\n                    <Route exact path=\"/\">\n                        <Redirect to=\"/dashboard\" />\n                    </Route>\n                </Switch>\n                \n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}