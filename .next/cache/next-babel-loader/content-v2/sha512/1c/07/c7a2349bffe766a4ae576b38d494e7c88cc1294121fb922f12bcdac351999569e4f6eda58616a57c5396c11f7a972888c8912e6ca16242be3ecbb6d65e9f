{"ast":null,"code":"/*\r\n    Objeto de configuração padrão para Qlik Cloud\r\n        {\r\n            host: 'grupoitg-nordica.us.qlikcloud.com',\r\n            prefix: '/',\r\n            port: 443,\r\n            isSecure: true,\r\n            webIntegrationId: 'zQLeIH8-uf87QC9JyLRsdrdZpvhVlkli'\r\n        }\r\n     Instruções:\r\n    Utilize o método connectQCS para conectar-se à Qlik Cloud, utilizando o objeto acima.\r\n\r\n    Objeto de configuração padrão para o Qlik Enterprise\r\n\r\n\r\n        {\r\n            host: 'qspoc.nordica.net.br',\r\n            prefix: '/',\r\n            port: 443,\r\n            isSecure: true\r\n        }        \r\n    Instruções:\r\n    Utilize o método connectQSE para conectar-se à Qlik Enterprise, utilizando o objeto acima.\r\n   \r\n*/\nconst engine = {\n  connectQCS: config => new Promise(resolve => {\n    const tenantUri = `https://${config.host}`;\n    engine.request(config, tenantUri, '/api/v1/users/me').then(user => {\n      console.log(`Logged in, ${user.name}`);\n      engine.loadCapSAAS(config).then(() => {\n        window.requirejs.config({\n          webIntegrationId: config.webIntegrationId,\n          baseUrl: `${tenantUri}${config.prefix}resources`\n        });\n        window.requirejs(['js/qlik'], qlik => {\n          resolve(qlik);\n        });\n      });\n    }, () => {\n      console.log('Redirecting to Qlik Cloud...');\n      const returnTo = encodeURIComponent(window.location.href);\n      window.location.href = `${tenantUri}/login?returnto=${returnTo}&qlik-web-integration-id=${config.webIntegrationId}`;\n    });\n  }),\n  connectQSE: config => new Promise(resolve => {\n    engine.loadCapabilityApis(config).then(() => {\n      const protocol = config.isSecure ? 'https://' : 'http://';\n      const port = config.port ? `:${config.port}` : '';\n      window.requirejs.config({\n        baseUrl: `${protocol}${config.host}${port}${config.prefix}resources`\n      });\n      window.requirejs(['js/qlik'], qlik => resolve(qlik));\n    });\n  }),\n  loadCapSAAS: async config => {\n    try {\n      const tenantUrl = config.host;\n      const {\n        webIntegrationId\n      } = config;\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = `https://${tenantUrl}/resources/autogenerated/qlik-styles.css`;\n      document.head.appendChild(link);\n      link.loaded = new Promise(resolve => {\n        link.onload = () => {\n          resolve();\n        };\n      });\n      const script = document.createElement('script');\n      script.src = `https://${tenantUrl}/resources/assets/external/requirejs/require.js`;\n\n      script.onload = async () => {\n        window.require.config({\n          baseUrl: `https://${tenantUrl}/resources`,\n          webIntegrationId\n        });\n      };\n\n      document.body.appendChild(script);\n      script.loaded = new Promise(resolve => {\n        script.onload = () => {\n          resolve();\n        };\n      });\n      await Promise.all([link.loaded, script.loaded]);\n    } catch (error) {\n      throw new Error(error);\n    }\n  },\n  loadCapabilityApis: async config => {\n    try {\n      const capabilityApisJS = document.createElement('script');\n      const {\n        prefix\n      } = config;\n      const protocol = config.isSecure ? 'https://' : 'http://';\n      const port = config.port ? `:${config.port}` : '';\n      const baseUrl = `${protocol}${config.host}${port}${prefix}`;\n      capabilityApisJS.src = `${baseUrl}resources/assets/external/requirejs/require.js`;\n      document.head.appendChild(capabilityApisJS);\n      capabilityApisJS.loaded = new Promise(resolve => {\n        capabilityApisJS.onload = () => {\n          resolve();\n        };\n      });\n      const capabilityApisCSS = document.createElement('link');\n      capabilityApisCSS.href = `${baseUrl}resources/autogenerated/qlik-styles.css`;\n      capabilityApisCSS.type = 'text/css';\n      capabilityApisCSS.rel = 'stylesheet';\n      document.head.appendChild(capabilityApisCSS);\n      capabilityApisCSS.loaded = new Promise(resolve => {\n        capabilityApisCSS.onload = () => {\n          resolve();\n        };\n      });\n      await Promise.all([capabilityApisJS.loaded, capabilityApisCSS.loaded]);\n    } catch (error) {\n      throw new Error(error);\n    }\n  },\n  request: (config, tenantUri, path, returnJson = true) => new Promise((resolve, reject) => {\n    fetch(`${tenantUri}${path}`, {\n      mode: 'cors',\n      credentials: 'include',\n      redirect: 'follow',\n      headers: {\n        'qlik-web-integration-id': config.webIntegrationId\n      }\n    }).then(res => {\n      if (res.status < 200 || res.status >= 400) reject(res);\n      return returnJson ? resolve(res.json()) : resolve(res);\n    }, err => {\n      reject(err);\n    });\n  })\n};\nexport default engine;","map":{"version":3,"sources":["C:/Users/cesar.moori/Documents/GitHub/mashup/src/QlikEngine.js"],"names":["engine","connectQCS","config","Promise","resolve","tenantUri","host","request","then","user","console","log","name","loadCapSAAS","window","requirejs","webIntegrationId","baseUrl","prefix","qlik","returnTo","encodeURIComponent","location","href","connectQSE","loadCapabilityApis","protocol","isSecure","port","tenantUrl","link","document","createElement","rel","head","appendChild","loaded","onload","script","src","require","body","all","error","Error","capabilityApisJS","capabilityApisCSS","type","path","returnJson","reject","fetch","mode","credentials","redirect","headers","res","status","json","err"],"mappings":"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","sourcesContent":["/*\r\n    Objeto de configuração padrão para Qlik Cloud\r\n        {\r\n            host: 'grupoitg-nordica.us.qlikcloud.com',\r\n            prefix: '/',\r\n            port: 443,\r\n            isSecure: true,\r\n            webIntegrationId: 'zQLeIH8-uf87QC9JyLRsdrdZpvhVlkli'\r\n        }\r\n     Instruções:\r\n    Utilize o método connectQCS para conectar-se à Qlik Cloud, utilizando o objeto acima.\r\n\r\n    Objeto de configuração padrão para o Qlik Enterprise\r\n\r\n\r\n        {\r\n            host: 'qspoc.nordica.net.br',\r\n            prefix: '/',\r\n            port: 443,\r\n            isSecure: true\r\n        }        \r\n    Instruções:\r\n    Utilize o método connectQSE para conectar-se à Qlik Enterprise, utilizando o objeto acima.\r\n   \r\n*/\r\n\r\nconst engine = {\r\n\r\n    connectQCS: (config) => new Promise((resolve) => {\r\n        const tenantUri = `https://${config.host}`;\r\n\r\n        engine.request(\r\n            config,\r\n            tenantUri,\r\n            '/api/v1/users/me'\r\n        ).then((user) => {\r\n            console.log(`Logged in, ${user.name}`);\r\n            engine.loadCapSAAS(config).then(() => {\r\n                window.requirejs.config({\r\n                    webIntegrationId: config.webIntegrationId,\r\n                    baseUrl: `${tenantUri}${config.prefix}resources`\r\n                });\r\n\r\n                window.requirejs(['js/qlik'], (qlik) => {\r\n                    resolve(qlik);\r\n                });\r\n            });\r\n        }, () => {\r\n            console.log('Redirecting to Qlik Cloud...');\r\n            const returnTo = encodeURIComponent(window.location.href);\r\n            window.location.href = `${tenantUri}/login?returnto=${returnTo}&qlik-web-integration-id=${config.webIntegrationId}`;\r\n        });\r\n    }),\r\n\r\n    connectQSE: (config) => new Promise((resolve) => {\r\n        engine.loadCapabilityApis(config).then(() => {\r\n            const protocol = config.isSecure ? 'https://' : 'http://';\r\n            const port = config.port ? `:${config.port}` : '';\r\n            window.requirejs.config({\r\n                baseUrl: `${protocol}${config.host}${port}${config.prefix}resources`\r\n            });\r\n            window.requirejs(['js/qlik'], (qlik) => resolve(qlik));\r\n        });\r\n    }),\r\n\r\n    loadCapSAAS: async (config) => {\r\n        try {\r\n            const tenantUrl = config.host;\r\n            const { webIntegrationId } = config;\r\n\r\n            const link = document.createElement('link');\r\n            link.rel = 'stylesheet';\r\n            link.href = `https://${tenantUrl}/resources/autogenerated/qlik-styles.css`;\r\n            document.head.appendChild(link);\r\n            link.loaded = new Promise((resolve) => {\r\n                link.onload = () => {\r\n                    resolve();\r\n                };\r\n            });\r\n\r\n            const script = document.createElement('script');\r\n            script.src = `https://${tenantUrl}/resources/assets/external/requirejs/require.js`;\r\n            script.onload = async () => {\r\n                window.require.config({\r\n                    baseUrl: `https://${tenantUrl}/resources`,\r\n                    webIntegrationId\r\n                });\r\n            };\r\n            \r\n            document.body.appendChild(script);\r\n            script.loaded = new Promise((resolve) => {\r\n                script.onload = () => {\r\n                    resolve();\r\n                };\r\n            });\r\n\r\n            await Promise.all([link.loaded, script.loaded]);\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    },\r\n\r\n    loadCapabilityApis: async (config) => {\r\n        try {\r\n            const capabilityApisJS = document.createElement('script');\r\n            const { prefix } = config;\r\n            const protocol = config.isSecure ? 'https://' : 'http://';\r\n            const port = config.port ? `:${config.port}` : '';\r\n            const baseUrl = `${protocol}${config.host}${port}${prefix}`;\r\n\r\n            capabilityApisJS.src = `${baseUrl}resources/assets/external/requirejs/require.js`;\r\n            document.head.appendChild(capabilityApisJS);\r\n            capabilityApisJS.loaded = new Promise((resolve) => {\r\n                capabilityApisJS.onload = () => {\r\n                    resolve();\r\n                };\r\n            });\r\n            const capabilityApisCSS = document.createElement('link');\r\n            capabilityApisCSS.href = `${baseUrl}resources/autogenerated/qlik-styles.css`;\r\n            capabilityApisCSS.type = 'text/css';\r\n            capabilityApisCSS.rel = 'stylesheet';\r\n            document.head.appendChild(capabilityApisCSS);\r\n            capabilityApisCSS.loaded = new Promise((resolve) => {\r\n                capabilityApisCSS.onload = () => {\r\n                    resolve();\r\n                };\r\n            });\r\n\r\n            await Promise.all([\r\n                capabilityApisJS.loaded,\r\n                capabilityApisCSS.loaded\r\n            ]);\r\n        } catch (error) {\r\n            throw new Error(error);\r\n        }\r\n    },\r\n    \r\n    request: (config, tenantUri, path, returnJson = true) => new Promise((resolve, reject) => {\r\n        fetch(`${tenantUri}${path}`, {\r\n            mode: 'cors',\r\n            credentials: 'include',\r\n            redirect: 'follow',\r\n            headers: {\r\n                'qlik-web-integration-id': config.webIntegrationId\r\n            }\r\n        }).then((res) => {\r\n            if (res.status < 200 || res.status >= 400) reject(res);\r\n            return returnJson ? resolve(res.json()) : resolve(res);\r\n        }, (err) => { reject(err); });\r\n    })\r\n};\r\n\r\nexport default engine;"]},"metadata":{},"sourceType":"module"}